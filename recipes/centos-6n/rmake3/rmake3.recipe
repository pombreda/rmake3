#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


class RmakeRecipe(CPackageRecipe):
    name = 'rmake3'
    version = '3.0'

    buildRequires = [
        'conary:python',
        'conary-repository:python',
        'libcap-devel:rpm',
        'python-psycopg2:python',
        'python-devel:rpm',
        'python-setuptools:rpm',
        'python-twisted:python',
        'python-txpostgres:python',
        'python-wokkel:python',
        'm2crypto:rpm',
    ]

    def setup(r):
        if r.name != 'rmake':
            r.macros.prefix = '/opt/%(name)s'
        r.macros.oldlibdir = '/usr/%(lib)s'
        r.macros.confdir = '/etc/%(name)s'
        r.macros.srvdir = '/srv/%(name)s'
        r.macros.initdir = '%(sysconfdir)s/rc.d/init.d'
        r.addMercurialSnapshot('http://hg.rpath.com/rmake')
        r.MakeInstall(
            'PKGNAME=%(name)s '
            'NO_COMPILE=1 '
            'prefix=%(prefix)s '
            # Use regular prefix for python code so things are importable
            'libdir=%(oldlibdir)s '
            'initdir=%(initdir)s '
            )
        r.CompilePython('/')

        r.Ownership('rmake', 'rmake',
                '%(srvdir)s.*',
                '/var/lib/%(name)s',
                '/var/log/%(name)s',
                '/var/run/%(name)s',
                )
        r.ExcludeDirectories(exceptions='%(srvdir)s.*')
        r.SetModes('%(srvdir)s', 0700)

        # library
        r.Requires(exceptDeps='python: epdb')
        r.ComponentProvides('%(version)s')

        # chroothelper
        chpath = '%(prefix)s/libexec/rmake/chroothelper'
        r.SetModes(chpath, 04755)
        r.Provides('file', chpath)
        r.Requires('file: ' + chpath, 'rootfactory.py')
        r.Requires('busybox:rpm', chpath)
        r.UtilizeUser('rmake-chroot', chpath)
        r.UtilizeGroup('rmake-chroot', chpath)
        r.ResolveFileDependencies(exceptions=chpath) # HACK until CNP-199

        ## package rmake-tests
        r.PackageSpec('%(name)s-test',
                '%(oldlibdir)s/.*/rmake_test/.*',
                )

        ## package rmake-node
        # This package has files required on individual build nodes
        # controlled by a head node
        r.macros.binpath = '%(prefix)s/sbin'
        r.PackageSpec('%(name)s-node',
                '%(initdir)s/%(name)s-node',
                '%(binpath)s/rmake-node',
                '%(confdir)s/noderc',
                '%(confdir)s/node.d/',
                )
        r.Provides('file', '%(binpath)s/rmake-node')
        r.Requires('%(name)s:python(%(version)s)', '%(binpath)s/rmake-node')


        ## package rmake-multinode-server
        # This package has files required on the head node that controls
        # all the individual build nodes that are connected to it
        r.PackageSpec('%(name)s-multinode-server',
                '%(initdir)s/%(name)s',
                '%(sbindir)s/rmake-dispatcher',
                '%(confdir)s/serverrc',
                '%(confdir)s/server.d/',
                )
        r.Provides('file', '%(binpath)s/rmake-dispatcher')
        r.Requires('%(name)s:python(%(version)s)', '%(binpath)s/rmake-dispatcher')

        r.NormalizeInitscriptContents(exceptions='%(initdir)s/.*')
